{"ast":null,"code":"var _jsxFileName = \"/Users/weljem/Desktop/activity1/src/ProfileCards.js\";\nimport React from \"react\";\nimport \"./ProfileCards.css\";\n\n// Correct the file paths based on the casing of your image files\nimport jemuelPic from './assets/jemuel.JPG'; // Use .JPG based on your error message\nimport rhaevenPic from './assets/rhaeven.jpg'; // Use .jpg as per your folder structure\nimport ibrahimPic from './assets/ibrahim.JPG'; // Use .JPG based on your error message\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileCards = () => {\n  const profiles = [{\n    name: \"Jemuel Santiago\",\n    age: 24,\n    location: \"Rizal\",\n    image: jemuelPic\n  }, {\n    name: \"Rhaeven\",\n    age: 21,\n    location: \"Caloocan\",\n    image: rhaevenPic\n  }, {\n    name: \"Ibrahim Ouabed\",\n    age: 23,\n    location: \"Rizal\",\n    image: ibrahimPic\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: profiles.map((profile, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.image,\n        alt: `${profile.name}'s profile`,\n        className: \"profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: profile.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Age: \", profile.age]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Location: \", profile.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfileCards;\nexport default ProfileCards;\nvar _c;\n$RefreshReg$(_c, \"ProfileCards\");","map":{"version":3,"names":["React","jemuelPic","rhaevenPic","ibrahimPic","jsxDEV","_jsxDEV","ProfileCards","profiles","name","age","location","image","className","children","map","profile","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/weljem/Desktop/activity1/src/ProfileCards.js"],"sourcesContent":["import React from \"react\";\nimport \"./ProfileCards.css\";\n\n// Correct the file paths based on the casing of your image files\nimport jemuelPic from './assets/jemuel.JPG';  // Use .JPG based on your error message\nimport rhaevenPic from './assets/rhaeven.jpg';  // Use .jpg as per your folder structure\nimport ibrahimPic from './assets/ibrahim.JPG';  // Use .JPG based on your error message\n\nconst ProfileCards = () => {\n  const profiles = [\n    { name: \"Jemuel Santiago\", age: 24, location: \"Rizal\", image: jemuelPic },\n    { name: \"Rhaeven\", age: 21, location: \"Caloocan\", image: rhaevenPic },\n    { name: \"Ibrahim Ouabed\", age: 23, location: \"Rizal\", image: ibrahimPic },\n  ];\n\n  return (\n    <div className=\"profile-container\">\n      {profiles.map((profile, index) => (\n        <div className=\"profile-card\" key={index}>\n          <img src={profile.image} alt={`${profile.name}'s profile`} className=\"profile-image\" />\n          <h2>{profile.name}</h2>\n          <p>Age: {profile.age}</p>\n          <p>Location: {profile.location}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ProfileCards;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;;AAE3B;AACA,OAAOC,SAAS,MAAM,qBAAqB,CAAC,CAAE;AAC9C,OAAOC,UAAU,MAAM,sBAAsB,CAAC,CAAE;AAChD,OAAOC,UAAU,MAAM,sBAAsB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMC,QAAQ,GAAG,CACf;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,GAAG,EAAE,EAAE;IAAEC,QAAQ,EAAE,OAAO;IAAEC,KAAK,EAAEV;EAAU,CAAC,EACzE;IAAEO,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE,EAAE;IAAEC,QAAQ,EAAE,UAAU;IAAEC,KAAK,EAAET;EAAW,CAAC,EACrE;IAAEM,IAAI,EAAE,gBAAgB;IAAEC,GAAG,EAAE,EAAE;IAAEC,QAAQ,EAAE,OAAO;IAAEC,KAAK,EAAER;EAAW,CAAC,CAC1E;EAED,oBACEE,OAAA;IAAKO,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/BN,QAAQ,CAACO,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BX,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BR,OAAA;QAAKY,GAAG,EAAEF,OAAO,CAACJ,KAAM;QAACO,GAAG,EAAE,GAAGH,OAAO,CAACP,IAAI,YAAa;QAACI,SAAS,EAAC;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvFjB,OAAA;QAAAQ,QAAA,EAAKE,OAAO,CAACP;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvBjB,OAAA;QAAAQ,QAAA,GAAG,OAAK,EAACE,OAAO,CAACN,GAAG;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBjB,OAAA;QAAAQ,QAAA,GAAG,YAAU,EAACE,OAAO,CAACL,QAAQ;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAJFN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAnBIjB,YAAY;AAqBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}